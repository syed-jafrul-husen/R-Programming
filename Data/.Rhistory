class(mpg)
ggplot(mpg, aes(displ,hwy))
ggplot(mpg, aes(displ,hwy)) +
geom_point()
View(d)
View(d)
ggplot(mpg, aes(displ,hwy), color=class) +
geom_point()
ggplot(mpg, aes(displ, hwy, color=class) ) +
geom_point()
#
ggplot(mpg, aes(displ, hwy, color=trans)) +
geom_point()
#
ggplot(mpg, aes(dspl, cty, color=trans)) +
geom_point()
#
ggplot(mpg, aes(displ, cty, color=trans)) +
geom_point()
#
df = data.frame(col1=1:3, col2=c(1,4,2))
ggplot(df, aes(col1,col2))=
geom_point()
ggplot(df, aes(col1,col2)) +
geom_point()
ggplot(df, aes(col1,col2)) +
geom_line()
ggplot(df, aes(x = col2, y = col1)) =
geom_line()
ggplot(df, aes(x = col2, y = col1)) +
geom_line()
ggplot(df, aes(x = col2, y = col1)) +
geom_line() +
geom_point()
ggplot(df, aes(col2, clo1)) +
geom_point() +
geom_line(size = 2)
ggplot(df, aes(col2, col1)) +
geom_point() +
geom_line(size = 2)
ggplot(df, aes(col2, col1)) +
geom_point() +
geom_line(size = 2, color="red")
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(gapminder)
library(tidyverse)
library(gapminder)
head(gapminder)
#bar
ggplot(gapminder, eas(continent)) +
geom_bar()
#bar
ggplot(gapminder, aes(continent)) +
geom_bar()
#Use of pipe in ggplot
gapminder %>%
filter(year = 1952)
#Use of pipe in ggplot
gapminder %>%
filter(year == 1952)
gapminder %>%
filter(year == 1952) %>%
ggplot(gapminder, aes(continent)) +
geom_bar()
gapminder %>%
filter(year == 1952)
gapminder %>%
filter(year == 1952) %>%
ggplot(gapminder, aes(continent)) +
geom_bar()
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(continent)) +
geom_bar()
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(continent, pop)) +
geom_bar(stat = "identity")
gapminder %>%
filter(year == 1952) %>%
ggplot(aes(continent, pop)) +
geom_col()
#Stacked bar
gapminder %>%
filter(year>=1952 & year<=1970) %>%
ggplot(aes(year,pop)) +
geom_bar(stat = "identity")
#if we want to know population per year by separating continent
gapminder %>%
filter(year>=1952 & year<=1970) %>%
ggplot(aes(year,pop)) +
geom_bar(stat = "identity", aes(fill=continent))
library(tidyverse)
library(gapminder)
source("G:/All/R programming/Basic - 1/Lecture-16.R", echo=TRUE)
head(gapminder)
#boxplot
ggplot(gapminder, aes(continent, lifeExp)) +
geom_boxplot()
library(tidyverse)
library(gapminder)
head(gapminder)
#boxplot
ggplot(gapminder, aes(continent, lifeExp)) +
geom_boxplot()
#violin
ggplot(gapminder, aes(continent, lifeExp)) +
geom_violin()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp), color = continent) +
geom_violin(draw_quantiles = c(.20, .40, .60 .80))
ggplot(gapminder, aes(continent, lifeExp), color = continent) +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp, color = continent) ) +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder. aes(continent, lifeExp, fill = continent)) +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp, fill = continent) ) +
geom_violin(draw_quantiles = c(.25, .5, .75))
#jitter
ggplot(gapminder, aes(continent, lifeExp))+
geom_gitter()
#jitter
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter()
#jitter
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_violin(draw_quantiles = c(.25, .5, .75))
#jitter
ggplot(gapminder, aes(continent, lifeExp) )+
geom_jitter()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp))+
geom_violin(draw_quantiles = c(.25, .5, .75)) +
geom_jitter()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitt() +
geom_violin((draw_quantiles = c(.25, .5, .75)))
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_violin((draw_quantiles = c(.25, .5, .75)))
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha = 2) +
geom_violin(draw_quantiles = c(.25, .5, .75))
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha = .2) +
geom_violin(draw_quantiles = c(.25, .5, .75))
#sorting according to highest meadian
gapminder$continent = factor(gapminder$continent, levels=c("Oceania", "Europe", "Americas", "Asia", "Africa"))
library(tidyverse)
library(gapminder)
head(gapminder)
#facet
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point()
#facet
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point() +
facet_grid(.~continent)
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point() +
facet_grid(continent~.)
#facet_wrap()
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point() +
facet_wrap()
#facet_wrap()
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point() +
facet_wrap(~.continent)
#facet_wrap()
ggplot(gapminder, aes(lifeExp, gdpPercap)) +
geom_point() +
facet_wrap(.~continent)
#coordinate flip
ggplot(gapminder, aes(continent, lfeExp)) +
geom_boxplot() +
coord_flip()
#coordinate flip
ggplot(gapminder, aes(continent, lfeExp)) +
geom_boxplot() +
coord_flip()
#coordinate flip
ggplot(gapminder, aes(continent, lifeExp)) +
geom_boxplot() +
coord_flip()
#theme
ggplot(gapminder, aes(continent, lifeExp, fill = continent)) +
geom_boxplot() +
theme_classic()
ggplot(gapminder, aes(continent, lifeExp, fill = continent)) +
geom_boxplot() +
theme_bw()
ggplot(gapminder, aes(continent, lifeExp, fill = continent)) +
geom_boxplot() +
theme_dark()
library(tidyverse)
library(gapminder)
head(gapminder)
#make scatter plot
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point()
#make scatter plot
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point()
#log transformation value
ggplot(gapminder, aes(gdpPercap, lifeExp)) +
geom_point() +
scale_x_log10()
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point()
#Change color in scatter
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(aes(color=continent))
#change size of point
ggplot(gapminder, aes(log10*gdpPercap), lifeExp) +
geom_point(aes(color = continent, size = 3))
#change size of point
ggplot(gapminder, aes(log10*gdpPercap), lifeExp) +
geom_point(aes(color = continent), size = 3)
#change size of point
ggplot(gapminder, aes(log10*gdpPercap), lifeExp) +
geom_point(aes(color = continent), size = 3)
#change size of point
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(aes(color = continent), size = 3)
#change some other parameter in scatter plot
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch=17, size = 2, aes(color = continent))
#change some other parameter in scatter plot
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch=17, size = 2, alpha = .8, aes(color = continent))
ggplot(gapminder, aes(log10(gapminder), lifeExp)) +
geom_point(pch = 17)
ggplot(gapminder, aes(log10(gapminder), lifeExp)) +
geom_point(pch = 17, color = red)
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch = 17, color = red)
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch = 17, color = "red")
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch = 17, color = "red", alpha = .8)
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(pch = 17, color = "red", alpha = .8, size = 2)
#use smoothing function
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
geom_smooth()
#Specify the method of smoothing
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
geom_smooth(lwd = 2, se = FALSE, method="lm", col="blue")
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
geom_smooth(aes(color=continent))
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point(aes(color=continent)) +
geom_smooth(aes(color="continent"))
#Example of faecting
ggplot(gapminder, aes(gdpPercap), lifeExp) +
geom_point() +
facet_wrap(~continent)
#Example of faceting
ggplot(gapminder, aes(gdpPercap), lifeExp) +
geom_point() +
facet_wrap(~continent)
#Example of faceting
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
facet_wrap(~continent)
#Change faceting by column
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
facet_wrap(~continent, ncol=1)
# Change faceting by row
ggplot(gapminder, aes(log10(gdpPercap), lifeExp)) +
geom_point() +
facet_wrap(~continent, nrow=1)
#boxplot and jitter
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_boxplot()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_boxplot()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_boxplot()
geom_boxplot(fill=continent)
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_boxplot(fill=continent)
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_boxplot()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_boxplot(aes(fill=continent))
# violin and jitter
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter() +
geom_violin()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jotter(1/2) +
geom_violin()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jotter(alpha=1/2) +
geom_violin()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_violin()
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_violin(fill=continent)
ggplot(gapminder, aes(continent, lifeExp)) +
geom_jitter(alpha=1/2) +
geom_violin(aes(fill=continent))
#histograms
ggplot(gapminder, aes(lifeExp)) +
geom_histogram()
#change binsize
ggplot(gapminder, aes(lifeExp)) +
geom_histogram(bins=50)
ggplot(gapminder, aes(lifeExp)) +
geom_histogram(bins=100)
ggplot(gapminder, aes(lifeExp)) +
geom_histogram(bins=500)
ggplot(gapminder, aes(lifeExp)) +
geom_histogram(aes(color=continent))
ggplot(gapminder, aes(lifeExp)) +
geom_histogram(aes(fill=continent))
#density plot
ggplot(gapminder, aes(lifeExp)) +
geom_density()
ggplot(gapminder, aes(lifeExp)) +
geom_density(aes(fill="red"))
#density plot
ggplot(gapminder, aes(lifeExp)) +
geom_density()
library(tidyverse)
library(gapminder)
#density plot
ggplot(gapminder, aes(lifeExp)) +
geom_density()
ggplot(gapminder, aes(lifeExp)) +
geom_density(aes(fill="red"))
#Change density(transparancy)
ggplot(gapminder, aes(lifeExp)) +
geom_density(aes(fill="red"), alpha=1/4)
ggplot(gapminder, aes(lifeExp)) +
geom_density(aes(fill=continent), alpha=1/4)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), bandwidth=4, color="black", fill="blue", alpha=0.5)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), bindwidth=4, color="black", fill="blue", alpha=0.5)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), binwidth=4, color="black", fill="blue", alpha=0.5)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), binwidth=8, color="black", fill="blue", alpha=0.5)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), binwidth=12, color="black", fill="blue", alpha=0.5)
#Density and histogram
ggplot(gapminder, aes(lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.5) +
geom_histogram(aes(y=..density..), binwidth=4, color="black", fill="blue", alpha=0.5)
#Time series line plot
ggplot(gapminder, aes(x=year, y=lifeExp, group=country)) +
geom_line()
#Line plot for median life Exp
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1)+
geom_point(size=1.5)
# line plot for median life Exp and smooth
gapminder %>%
group_by(continent,year) +
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="lm")
# line plot for median life Exp and smooth
gapminder %>%
group_by(continent, year)
# line plot for median life Exp and smooth
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="lm")
x = 5
if(x>0){
print("x is a positive number")
}
if(x>0){
print("x is a positive number")
print("Yes")
}
if(x>0){
print("X is a positive number")
} else{
print("X is a negative number")
}
x = -5
if(x>0){
print("X is a positive number")
} else{
print("X is a negative number")
}
x = 0
if(x>0){
print("X is a positive number")
} else if(x<0){
print("X is a negative number")
} else{
print("X equals to zero")
}
for(index in 1:10){
print(index)
}
for(index in 1:10){
print("index = ",index)
}
for(index in 1:10){
print(c("index = ",index))
}
for(index in 1:10){
print(c("index = ",index))  # we have to write c so that it can concrete the string
}
#multiply 1 by 10
for(index in 1:10){
print(1*index)
}
#multiply 3 by 1:10
for(index in 1:10){
print(3*index)
}
print(c(3, "*", index, "=", 3*index))
#
for(index in 1:10)
print(c(3, "*", index, "=", 3*index))
#
for(index in 1:10){
print(c(3, "*", index, "=", 3*index))
}
# Make a function for multiplication table
multiplication_table = function(inputNumber){
for(index in 1:10){
print(c(inputNumber, "*", index, "=", inputNumber*index))
}
}
2
# multiplication of 3
for(index in 1:10){
print(c(3, "*", index, "=", 3*index))
}
# Make a function for multiplication table
multiplication_table = function(inputNumber){
for(index in 1:10){
print(c(inputNumber, "*", index, "=", inputNumber*index))
}
}
2
View(multiplication_table)
# Make a function for multiplication table
multiplication_table = function(inputNumber){
for(index in 1:10)
{
print(c(inputNumber, "*", index, "=", inputNumber*index))
}
}
multiplication_table(3)
multiplication_table(5)
multiplication_table(150)
install.packages("dandextend")
library(dandextend)
install.packages("dendextend")
library(dendextend)
setwd("~G:\All\R programming\Data")
setwd("G:\All\R programming\Data")
setwd("G:/All/R programming/Data")
setwd("~G:/All/R programming/Data")
setwd("G:/All/R programming/Data")
x = read.table("Leukemia_Carcinoma.tsv", header=T)
x = read.table("Leukemia_Carcinoma.tsv", header=T, fill=T)
age "line 1 did not have 8 elements"
# used "fill=T"
View(x)
View(x)
